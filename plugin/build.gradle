plugins {
    id 'java-gradle-plugin'
    id 'jacocomerge.java-library-conventions'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    implementation group: 'org.jacoco', name: 'org.jacoco.core', version: '0.8.7'
    implementation group: 'org.jacoco', name: 'org.jacoco.report', version: '0.8.7'
    implementation group: 'com.github.bibsysdev', name: 'core', version: '1.7.5'
    implementation group: 'com.github.bibsysdev', name: 's3', version: '1.7.5'
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'jacocoMerge.greeting'
            implementationClass = 'jacocoMerge.JacocoMergePlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
